How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The syntax high lighting and number and column pointer made it obvious where
    the errors occurred.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Being able to compare to prior versions of the program allows me to find
    and fix broken changes in the code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    There can be situations where you may not want to commit changes e,g like your
    local configuration file.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    To allow you to make feature changes instead of file changes.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    It allows me to try different solutions w/o having to worry about messing
    something up. It easy rewind the changes.

Now that you have your workspace set up, what do you want to try using Git for?

    Changing files then rewinding them.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

  It allows me to try different solutions w/o having to worry about messing
  something up. It easy rewind the changes.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?

  pros:
    You decide what is too big or small for a commit
    Keep a more readable history of changes
    Reviewing diffs could be more manageable.
  cons:
    You may be poor at committing changes in a reasonable time frame.
    You have to give some thought to when to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

  Git commits are more suitable for programming features and allowing the user
  to unwind those features w/o too much digging. Google Docs would require
  some research to unwind changes that affect several files. e,g. like a
  function parameter list change that might be found in several files.

How can you use the commands git log and git diff to view the history of files?

  git log
  git diff hashID1 hasdID2

  These commands will display the log file for a given project and the get diff
  will display the differences between the files.
